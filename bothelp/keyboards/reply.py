from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from aiogram.utils.keyboard import ReplyKeyboardBuilder
from sqlalchemy import select
from sqlalchemy.ext.asyncio import AsyncSession

from bothelp.db import session_maker, Student

back_button_text = '‚¨ÖÔ∏è –ù–∞–∑–∞–¥'

go_to_settings = '‚¨Ö –í –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫'
alarm_on = 'üõéÔ∏è –í–∫–ª. –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è'
alarm_off = 'üõéÔ∏è –í—ã–∫–ª. –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è'
alarm_settings = 'üë§ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π'


not_login = ReplyKeyboardMarkup(
    keyboard=[[KeyboardButton(text='üîë –í–æ–π—Ç–∏')]],
    resize_keyboard=True)
cancel = ReplyKeyboardMarkup(
    keyboard=[[KeyboardButton(text='‚ùå –û—Ç–º–µ–Ω–∞')]],
    resize_keyboard=True)


def main_menu():
    builder = ReplyKeyboardBuilder()

    builder.row(KeyboardButton(text='üîé –ê–Ω–∞–ª–∏–∑ –æ—Ç–º–µ—Ç–æ–∫'))
    builder.row(KeyboardButton(text='üßê –°–æ–≤–µ—Ç—ã –ø–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—é'))
    builder.row(KeyboardButton(text='üë§ –ù–∞—Å—Ç—Ä–æ–π–∫–∏'))

    keyboard = builder.as_markup()
    keyboard.resize_keyboard = True
    return keyboard


def analytics_menu():
    builder = ReplyKeyboardBuilder()

    builder.row(KeyboardButton(text='üìÖ –ê–Ω–∞–ª–∏–∑ —á–µ—Ç–≤–µ—Ä—Ç–Ω—ã—Ö –æ—Ç–º–µ—Ç–æ–∫'))
    builder.row(KeyboardButton(text='üßÆ –°—Ä–µ–¥–Ω–∏–π –±–∞–ª–ª'))
    builder.row(KeyboardButton(text=back_button_text))

    keyboard = builder.as_markup()
    keyboard.resize_keyboard = True
    return keyboard


def fix_menu():
    builder = ReplyKeyboardBuilder()

    builder.row(KeyboardButton(text='‚ÅâÔ∏è –°–ø–æ—Å–æ–±—ã –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—Ç–º–µ—Ç–∫–∏'))
    builder.row(KeyboardButton(text='‚òùÔ∏è –ß—Ç–æ –±—É–¥–µ—Ç –µ—Å–ª–∏ –ø–æ–ª—É—á–∏—Ç—å...'))
    builder.row(KeyboardButton(text=back_button_text))

    keyboard = builder.as_markup()
    keyboard.resize_keyboard = True
    return keyboard


def setting_menu():
    builder = ReplyKeyboardBuilder()

    builder.row(KeyboardButton(text='üõéÔ∏è –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è',))
    builder.row(KeyboardButton(text='‚öôÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –≤–∏–¥'))
    builder.row(KeyboardButton(text=back_button_text))

    keyboard = builder.as_markup()
    keyboard.resize_keyboard = True
    return keyboard


def alarm_setting_menu():
    builder = ReplyKeyboardBuilder()

    builder.row(KeyboardButton(text='‚òëÔ∏è –í—ã–±—Ä–∞–Ω–Ω—ã–µ —É—Ä–æ–∫–∏'))
    builder.row(KeyboardButton(text='üìÖ –ü–µ—Ä–∏–æ–¥ –ø—Ä–æ–≤–µ—Ä–∫–∏'))
    builder.row(KeyboardButton(text='‚¨ÖÔ∏è –í –º–µ–Ω—é —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π'))

    keyboard = builder.as_markup()
    keyboard.resize_keyboard = True
    return keyboard


async def alarm_menu(user_id: int):
    async with session_maker() as session:
        session: AsyncSession
        result = await session.execute(select(Student).where(Student.user_id == user_id))
        alarm_menu_buttons = [
            alarm_on,
            alarm_settings,
            go_to_settings
        ]

        if result.scalars().one_or_none().alarm_state:
            alarm_menu_buttons = [
                alarm_off,
                alarm_settings,
                go_to_settings
            ]
        builder = ReplyKeyboardBuilder()
        for menu_item in alarm_menu_buttons:
            builder.row(KeyboardButton(text=menu_item))
        keyboard = builder.as_markup()
        keyboard.resize_keyboard = True

        return keyboard
